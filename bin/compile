#!/usr/bin/env bash

set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
MANIFEST_FILE_PATH="$BUILD_DIR/public/vite/.vite/manifest.json"
CDN_HOST=$(cat "$ENV_DIR/CDN_HOST")
CDN_MANIFEST_FILE="https://$CDN_HOST/$SOURCE_VERSION/vite/.vite/manifest.json"
MANIFEST_POLL_INTERVAL=10

echo "--------------------------------------------------"
echo "Commit SHA        : $SOURCE_VERSION"
echo "CDN host          : $CDN_HOST"
echo "CDN manifest file : $CDN_MANIFEST_FILE"
echo "Manifest file path: $MANIFEST_FILE_PATH"
echo "--------------------------------------------------"

# Webhook variables
HARNESS_WEBHOOK_BASE_URL=$(cat "$ENV_DIR/HARNESS_WEBHOOK_BASE_URL")
HARNESS_ACCOUNT_IDENTIFIER=$(cat "$ENV_DIR/HARNESS_ACCOUNT_IDENTIFIER")
HARNESS_ORG_IDENTIFIER=$(cat "$ENV_DIR/HARNESS_ORG_IDENTIFIER")
HARNESS_PROJECT_IDENTIFIER=$(cat "$ENV_DIR/HARNESS_PROJECT_IDENTIFIER")
HARNESS_PIPELINE_IDENTIFIER=$(cat "$ENV_DIR/HARNESS_PIPELINE_IDENTIFIER")
HARNESS_TRIGGER_IDENTIFIER=$(cat "$ENV_DIR/HARNESS_TRIGGER_IDENTIFIER")
HARNESS_WEBHOOK_PAYLOAD="{\"commitSha\": \"$SOURCE_VERSION\", \"branch\": \"master\"}"

# Construct URL
WEBHOOK_URL="${HARNESS_WEBHOOK_BASE_URL}?accountIdentifier=${HARNESS_ACCOUNT_IDENTIFIER}&orgIdentifier=${HARNESS_ORG_IDENTIFIER}&projectIdentifier=${HARNESS_PROJECT_IDENTIFIER}&pipelineIdentifier=${HARNESS_PIPELINE_IDENTIFIER}&triggerIdentifier=${HARNESS_TRIGGER_IDENTIFIER}"

mkdir -p "$(dirname "$MANIFEST_FILE_PATH")"

download_manifest_file() {
  curl -f -s -o "$MANIFEST_FILE_PATH" "$CDN_MANIFEST_FILE"
}

check_manifest_loop() {
  while true; do
    if download_manifest_file; then
      echo "Manifest file downloaded successfully."
      break
    else
      echo "Manifest file not found. Retrying in $MANIFEST_POLL_INTERVAL seconds..."
      sleep $MANIFEST_POLL_INTERVAL
    fi
  done
}

trigger_webhook() {
  curl -X POST \
    -H 'Content-Type: application/json' \
    --url "$WEBHOOK_URL" \
    -d "$HARNESS_WEBHOOK_PAYLOAD"
}

echo "Downloading manifest file..."
if download_manifest_file; then
  echo "Manifest file previously built: downloaded successfully."
else
  echo "Manifest file unavailable. Triggering webhook..."
  trigger_webhook
  sleep $MANIFEST_POLL_INTERVAL
  check_manifest_loop
fi
