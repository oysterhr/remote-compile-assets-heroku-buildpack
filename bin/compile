#!/usr/bin/env bash

set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
VITE_DIR="$BUILD_DIR/public/vite"
CDN_HOST=$(cat "$ENV_DIR/CDN_HOST")
CDN_VITE_URL="https://$CDN_HOST/$SOURCE_VERSION/vite"
MANIFEST_POLL_INTERVAL=10
HEROKU_BRANCH=$(cat "$ENV_DIR/HEROKU_BRANCH")
RAILS_ENV=$(cat "$ENV_DIR/RAILS_ENV" | sed 's/.*/\U&/')

echo "--------------------------------------------------"
echo "Commit SHA        : $SOURCE_VERSION"
echo "CDN host          : $CDN_HOST"
echo "CDN vite url      : $CDN_VITE_URL"
echo "Public vite dir   : $VITE_DIR"
echo "Heroku Branch     : $HEROKU_BRANCH"
echo "--------------------------------------------------"

# Webhook variables
HARNESS_WEBHOOK_BASE_URL=$(cat "$ENV_DIR/HARNESS_WEBHOOK_BASE_URL")
HARNESS_ACCOUNT_IDENTIFIER=$(cat "$ENV_DIR/HARNESS_ACCOUNT_IDENTIFIER")
HARNESS_ORG_IDENTIFIER=$(cat "$ENV_DIR/HARNESS_ORG_IDENTIFIER")
HARNESS_PROJECT_IDENTIFIER=$(cat "$ENV_DIR/HARNESS_PROJECT_IDENTIFIER")
HARNESS_PIPELINE_IDENTIFIER=$(cat "$ENV_DIR/HARNESS_PIPELINE_IDENTIFIER")
HARNESS_TRIGGER_IDENTIFIER=$(cat "$ENV_DIR/HARNESS_TRIGGER_IDENTIFIER")
HARNESS_WEBHOOK_PAYLOAD="{\"commitSha\": \"$SOURCE_VERSION\", \"branch\": \"$HEROKU_BRANCH\", \"env\": \"$RAILS_ENV\"}"

# Construct URL
WEBHOOK_URL="${HARNESS_WEBHOOK_BASE_URL}?accountIdentifier=${HARNESS_ACCOUNT_IDENTIFIER}&orgIdentifier=${HARNESS_ORG_IDENTIFIER}&projectIdentifier=${HARNESS_PROJECT_IDENTIFIER}&pipelineIdentifier=${HARNESS_PIPELINE_IDENTIFIER}&triggerIdentifier=${HARNESS_TRIGGER_IDENTIFIER}"

download_manifest_file() {
  local manifest_file_path=$VITE_DIR/$1/manifest.json
  local cdn_url=$CDN_VITE_URL/$1/manifest.json

  mkdir -p "$(dirname "$manifest_file_path")"

  echo "Attempting to download $cdn_url to $manifest_file_path..."
  curl -f -s -o "$manifest_file_path" "$cdn_url"
}

check_manifest_loop() {
  while true; do
    if download_manifest_file $1; then
      echo "    Success!"
      break
    else
      echo "    Retrying in $MANIFEST_POLL_INTERVAL seconds..."
      sleep $MANIFEST_POLL_INTERVAL
    fi
  done
}

trigger_webhook() {
  curl -X POST \
    -H 'Content-Type: application/json' \
    --url "$WEBHOOK_URL" \
    -d "$HARNESS_WEBHOOK_PAYLOAD"
}

if download_manifest_file ".vite"; then
  echo "    Success! Skipping build!"
else
  echo "    Failed! Triggering new build..."
  trigger_webhook
  echo ""
  sleep $MANIFEST_POLL_INTERVAL
  check_manifest_loop ".vite"
fi

echo "Downloading manifest files for standalone apps in $BUILD_DIR/frontend/apps..."

for subdir in "$BUILD_DIR/frontend/apps"/*; do
  # Only consider directories, skip the .vite one because it's been processed first,
  # and avoid storybook dirs
  echo "Checking $subdir"
  if [[ -d $subdir && $(basename "$subdir") != ".vite" && ! $(basename "$subdir") =~ storybook ]]; then
    echo "Considering $subdir!"
    subdir_name=$(basename "$subdir")

    echo "Downloading for $subdir_name/.vite"
    if download_manifest_file "$subdir_name/.vite"; then
      echo "Manifest file for $subdir_name downloaded successfully."
    else
      echo "Manifest file for $subdir_name unavailable. Retrying..."
      check_manifest_loop "$subdir_name/.vite"
    fi
  fi
done
